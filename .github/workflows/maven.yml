# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 10
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.2.0
      with:
        node-version: 12.16.3
    - name: Clean Packages 
      run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
    - name: Install React Native CLI
      run: |
          npm install react-native-cli
    - name: Appium Server Action
      uses: moatazeldebsy/Appium-Server-GitHub-Action@V1.0.5
    - name: Run Android Emulator
      run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-28;google_apis;x86_64'
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_device -k 'system-images;android-28;google_apis;x86_64' --force
          echo $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
    - name: Build with Maven
      run: mvn clean verify -Dtestng.dtd.http=true
      
